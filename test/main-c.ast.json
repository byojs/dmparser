{
  "type": "Unit",
  "span": null,
  "classes": [
    {
      "type": "Class",
      "span": null,
      "path": {
        "type": "Ident",
        "span": "test/Your First World/main-c.dm;7;1;;7;3",
        "value": "obj"
      },
      "classes": [
        {
          "type": "Class",
          "span": null,
          "path": {
            "type": "Ident",
            "span": ";28;2;;28;7",
            "value": "cheese"
          },
          "classes": [],
          "procedures": [],
          "properties": [
            {
              "name": {
                "type": "Ident",
                "span": ";29;3;;29;6",
                "value": "desc"
              },
              "expression": {
                "type": "LiteralString",
                "span": ";29;10;;29;30",
                "text": "It is quite smelly.",
                "singleQuoted": false
              },
              "span": null
            }
          ],
          "variables": [],
          "verbs": [
            {
              "type": "Procedure",
              "name": {
                "type": "Ident",
                "span": ";32;4;;32;6",
                "value": "eat"
              },
              "arguments": {
                "type": "ArgumentDeclList",
                "arguments": []
              },
              "body": {
                "type": "Block",
                "statements": [
                  {
                    "type": "ExpressionStatement",
                    "span": ";33;9;;33;10",
                    "expression": {
                      "type": "BinaryExpression",
                      "span": ";33;9;;33;10",
                      "binaryType": "<<",
                      "left": {
                        "type": "Ident",
                        "span": ";33;5;;33;7",
                        "value": "usr"
                      },
                      "right": {
                        "type": "LiteralString",
                        "span": ";33;12;;33;50",
                        "text": "You take a bite of the cheese. Bleck!",
                        "singleQuoted": false
                      }
                    }
                  },
                  {
                    "type": "AssignmentStatement",
                    "span": ";35;12;;35;12",
                    "target": {
                      "type": "Ident",
                      "span": ";35;5;;35;10",
                      "value": "suffix"
                    },
                    "expression": {
                      "type": "LiteralString",
                      "span": ";35;14;;35;24",
                      "text": "(nibbled)",
                      "singleQuoted": false
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "Class",
          "span": null,
          "path": {
            "type": "Ident",
            "span": ";37;2;;37;7",
            "value": "scroll"
          },
          "classes": [],
          "procedures": [],
          "properties": [
            {
              "name": {
                "type": "Ident",
                "span": ";38;3;;38;6",
                "value": "desc"
              },
              "expression": {
                "type": "LiteralString",
                "span": ";38;10;;38;37",
                "text": "It looks to be rather old.",
                "singleQuoted": false
              },
              "span": null
            }
          ],
          "variables": [],
          "verbs": [
            {
              "type": "Procedure",
              "name": {
                "type": "Ident",
                "span": ";41;4;;41;7",
                "value": "read"
              },
              "arguments": {
                "type": "ArgumentDeclList",
                "arguments": []
              },
              "body": {
                "type": "Block",
                "statements": [
                  {
                    "type": "ExpressionStatement",
                    "span": ";42;9;;42;10",
                    "expression": {
                      "type": "BinaryExpression",
                      "span": ";42;9;;42;10",
                      "binaryType": "<<",
                      "left": {
                        "type": "Ident",
                        "span": ";42;5;;42;7",
                        "value": "usr"
                      },
                      "right": {
                        "type": "LiteralString",
                        "span": ";42;12;;42;67",
                        "text": "You utter the phrase written on the scroll: \"Knuth\"!",
                        "singleQuoted": false
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "span": ";45;5;;45;7",
                    "expression": {
                      "type": "NewExpression",
                      "span": ";45;5;;45;7",
                      "className": {
                        "type": "Path",
                        "span": ";45;14;;45;16",
                        "namespace": {
                          "type": "Path",
                          "span": ";45;10;;45;12",
                          "namespace": {
                            "type": "RootNamespace",
                            "span": ";45;9;;45;9"
                          },
                          "member": {
                            "type": "Ident",
                            "span": ";45;10;;45;12",
                            "value": "mob"
                          }
                        },
                        "member": {
                          "type": "Ident",
                          "span": ";45;14;;45;16",
                          "value": "rat"
                        }
                      },
                      "arguments": {
                        "type": "ArgumentList",
                        "named": [],
                        "positional": [
                          {
                            "type": "MemberExpression",
                            "span": ";45;21;;45;21",
                            "expression": {
                              "type": "Ident",
                              "span": ";45;18;;45;20",
                              "value": "usr"
                            },
                            "name": {
                              "type": "Ident",
                              "span": ";45;22;;45;24",
                              "value": "loc"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "span": ";47;9;;47;10",
                    "expression": {
                      "type": "BinaryExpression",
                      "span": ";47;9;;47;10",
                      "binaryType": "<<",
                      "left": {
                        "type": "Ident",
                        "span": ";47;5;;47;7",
                        "value": "usr"
                      },
                      "right": {
                        "type": "LiteralString",
                        "span": ";47;12;;47;33",
                        "text": "A giant rat appears!",
                        "singleQuoted": false
                      }
                    }
                  },
                  {
                    "type": "DelStatement",
                    "span": ";50;5;;50;7",
                    "expression": {
                      "type": "Ident",
                      "span": ";50;9;;50;11",
                      "value": "src"
                    }
                  }
                ]
              }
            }
          ]
        }
      ],
      "procedures": [],
      "properties": [],
      "variables": [],
      "verbs": [
        {
          "type": "Procedure",
          "name": {
            "type": "Ident",
            "span": ";9;3;;9;5",
            "value": "get"
          },
          "arguments": {
            "type": "ArgumentDeclList",
            "arguments": []
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "span": ";18;8;;18;9",
                "expression": {
                  "type": "BinaryExpression",
                  "span": ";18;8;;18;9",
                  "binaryType": "<<",
                  "left": {
                    "type": "Ident",
                    "span": ";18;4;;18;6",
                    "value": "usr"
                  },
                  "right": {
                    "type": "LiteralString",
                    "span": ";18;11;;18;26",
                    "text": "You get [src].",
                    "singleQuoted": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "span": null,
                "expression": {
                  "type": "CallExpression",
                  "span": null,
                  "callable": {
                    "type": "Ident",
                    "span": ";21;4;;21;7",
                    "value": "Move"
                  },
                  "arguments": {
                    "type": "ArgumentList",
                    "named": [],
                    "positional": [
                      {
                        "type": "Ident",
                        "span": ";21;9;;21;11",
                        "value": "usr"
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "type": "Procedure",
          "name": {
            "type": "Ident",
            "span": ";23;3;;23;6",
            "value": "drop"
          },
          "arguments": {
            "type": "ArgumentDeclList",
            "arguments": []
          },
          "body": {
            "type": "Block",
            "statements": [
              {
                "type": "ExpressionStatement",
                "span": ";24;8;;24;9",
                "expression": {
                  "type": "BinaryExpression",
                  "span": ";24;8;;24;9",
                  "binaryType": "<<",
                  "left": {
                    "type": "Ident",
                    "span": ";24;4;;24;6",
                    "value": "usr"
                  },
                  "right": {
                    "type": "LiteralString",
                    "span": ";24;11;;24;27",
                    "text": "You drop [src].",
                    "singleQuoted": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "span": null,
                "expression": {
                  "type": "CallExpression",
                  "span": null,
                  "callable": {
                    "type": "Ident",
                    "span": ";26;4;;26;7",
                    "value": "Move"
                  },
                  "arguments": {
                    "type": "ArgumentList",
                    "named": [],
                    "positional": [
                      {
                        "type": "MemberExpression",
                        "span": ";26;12;;26;12",
                        "expression": {
                          "type": "Ident",
                          "span": ";26;9;;26;11",
                          "value": "usr"
                        },
                        "name": {
                          "type": "Ident",
                          "span": ";26;13;;26;15",
                          "value": "loc"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Class",
      "span": null,
      "path": {
        "type": "Ident",
        "span": ";52;1;;52;3",
        "value": "mob"
      },
      "classes": [
        {
          "type": "Class",
          "span": null,
          "path": {
            "type": "Ident",
            "span": ";53;2;;53;7",
            "value": "player"
          },
          "classes": [],
          "procedures": [
            {
              "procedure": {
                "type": "Procedure",
                "name": {
                  "type": "Ident",
                  "span": ";56;3;;56;6",
                  "value": "Stat"
                },
                "arguments": {
                  "type": "ArgumentDeclList",
                  "arguments": []
                },
                "body": {
                  "type": "Block",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "span": null,
                      "expression": {
                        "type": "CallExpression",
                        "span": null,
                        "callable": {
                          "type": "Ident",
                          "span": ";57;4;;57;12",
                          "value": "statpanel"
                        },
                        "arguments": {
                          "type": "ArgumentList",
                          "named": [],
                          "positional": [
                            {
                              "type": "LiteralString",
                              "span": ";57;14;;57;24",
                              "text": "Inventory",
                              "singleQuoted": false
                            },
                            {
                              "type": "Ident",
                              "span": ";57;27;;57;34",
                              "value": "contents"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "declaredInProcBlock": false
            }
          ],
          "properties": [
            {
              "name": {
                "type": "Ident",
                "span": ";54;3;;54;6",
                "value": "desc"
              },
              "expression": {
                "type": "LiteralString",
                "span": ";54;10;;54;40",
                "text": "A handsome and dashing rogue.",
                "singleQuoted": false
              },
              "span": null
            }
          ],
          "variables": [],
          "verbs": [
            {
              "type": "Procedure",
              "name": {
                "type": "Ident",
                "span": ";60;4;;60;7",
                "value": "look"
              },
              "arguments": {
                "type": "ArgumentDeclList",
                "arguments": []
              },
              "body": {
                "type": "Block",
                "statements": [
                  {
                    "type": "ExpressionStatement",
                    "span": ";61;9;;61;10",
                    "expression": {
                      "type": "BinaryExpression",
                      "span": ";61;9;;61;10",
                      "binaryType": "<<",
                      "left": {
                        "type": "Ident",
                        "span": ";61;5;;61;7",
                        "value": "src"
                      },
                      "right": {
                        "type": "LiteralString",
                        "span": ";61;12;;61;23",
                        "text": "You see...",
                        "singleQuoted": false
                      }
                    }
                  },
                  {
                    "type": "ForListStatement",
                    "span": ";63;5;;63;7",
                    "varDecl": {
                      "type": "VarStatement",
                      "span": ";63;9;;63;11",
                      "name": {
                        "type": "Ident",
                        "span": ";63;26;;63;26",
                        "value": "o"
                      },
                      "varType": {
                        "type": "Path",
                        "span": ";63;17;;63;17",
                        "namespace": {
                          "type": "Ident",
                          "span": ";63;13;;63;16",
                          "value": "atom"
                        },
                        "member": {
                          "type": "Ident",
                          "span": ";63;18;;63;24",
                          "value": "movable"
                        }
                      }
                    },
                    "expression": {
                      "type": "CallExpression",
                      "span": null,
                      "callable": {
                        "type": "Ident",
                        "span": ";63;31;;63;35",
                        "value": "oview"
                      },
                      "arguments": {
                        "type": "ArgumentList",
                        "named": [],
                        "positional": []
                      }
                    },
                    "body": {
                      "type": "Block",
                      "statements": [
                        {
                          "type": "ExpressionStatement",
                          "span": ";64;10;;64;11",
                          "expression": {
                            "type": "BinaryExpression",
                            "span": ";64;10;;64;11",
                            "binaryType": "<<",
                            "left": {
                              "type": "Ident",
                              "span": ";64;6;;64;8",
                              "value": "src"
                            },
                            "right": {
                              "type": "LiteralString",
                              "span": ";64;13;;64;28",
                              "text": "[o].  [o.desc]",
                              "singleQuoted": false
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "Class",
          "span": null,
          "path": {
            "type": "Ident",
            "span": ";66;2;;66;4",
            "value": "rat"
          },
          "classes": [],
          "procedures": [],
          "properties": [
            {
              "name": {
                "type": "Ident",
                "span": ";67;3;;67;6",
                "value": "desc"
              },
              "expression": {
                "type": "LiteralString",
                "span": ";67;10;;67;28",
                "text": "It's quite large.",
                "singleQuoted": false
              },
              "span": null
            }
          ],
          "variables": [],
          "verbs": []
        }
      ],
      "procedures": [],
      "properties": [],
      "variables": [],
      "verbs": []
    }
  ]
}